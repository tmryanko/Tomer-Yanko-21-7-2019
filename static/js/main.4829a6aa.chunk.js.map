{"version":3,"sources":["components/MyNavbar.js","components/MySearch.js","components/MyCard.js","utils/utils.js","components/CardList.js","components/MyWeather.js","constants/actionTypes.js","actions/weatherActions.js","actions/favActions.js","components/Toaster.js","containers/Home.js","components/FavCardList.js","containers/Favorites.js","components/Main.js","App.js","enhancers/monitorReducers.js","middleware/logger.js","reducers/weather.js","reducers/favorites.js","reducers/notifications.js","reducers/index.js","index.js","utils/configureStore.js"],"names":["MyNavbar","props","react_default","a","createElement","Navbar","bg","variant","Brand","href","Collapse","className","Nav","react_router_dom","to","MySearch","_ref","onChange","cities","OnSelect","value","Autocomplete_default","inputProps","placeholder","getItemValue","item","items","renderItem","isHighlighted","style","position","background","onSelect","MyCard","degrees","date","unit","name","loc","handleGoHome","id","Card","border","onClick","Body","Text","slice","toFixed","CardList","weather","list","map","val","i","components_MyCard","key","Temperature","Maximum","Value","Date","Unit","MyWeather","currentWeather","iColor","index_es","color","icon","faHeart","Button","weatherText","components_CardList","AT","GET_AUTO_COMPLETE_SUCCESS","GET_CURRENT_WEATHER_SUCCESS","GET_FIVE_DAY_WEATHER_SUCCESS","ADD_TO_FAVORITES","REM_FROM_FAV","FAIL_MSG","EDIT_CURRENT_CITY","LINK","API_KEY","API_KEY1","API_KEY2","process","WEATHER_API_KEY2","getAutoCompleteSuccess","type","payload","getFiveDayWeatherSuccess","getCurrentWeatherSuccess","failMsg","msg","msgBool","getAutoComplete","e","dispatch","axios","get","concat","then","res","data","length","c","LocalizedName","Key","catch","getFiveDayWeather","DailyForecasts","getCurrentWeather","WeatherText","LocalObservationDateTime","Metric","addToFavorites","cityName","remFromFav","editCurrentCity","iconColor","Toaster","showFailMsg","onToastClose","aria-live","aria-atomic","minHeight","Toast","top","right","onClose","show","delay","autohide","Header","src","alt","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFormChange","setState","target","actions","handleOnSelect","favList","filter","city","index","handleOnClickToFav","_this$state","state","_this$props","currentCity","newList","handleToastClose","_this$props2","_this$state2","_this$props3","FiveDayWeather","components_MySearch","loadOptions","components_MyWeather","components_Toaster","Component","defaultProps","connect","weatherReducer","favoritesReducer","favorites","notificationsReducer","bindActionCreators","objectSpread","weatherActions","favActions","FavCardList","assign","Favorites","history","push","_this2","components_FavCardList","Main","react_router","exact","path","component","App","components_MyNavbar","components_Main","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","Math","round","console","log","logger","store","next","group","info","result","getState","groupEnd","arguments","undefined","toConsumableArray","rootReducer","combineReducers","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","apply","monitorReducersEnhancer","composedEnhancers","compose","configureStore","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"mwBAqBmBA,SAhBD,SAACC,GACf,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QAC1BL,EAAAC,EAAAC,cAACC,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,uBACAP,EAAAC,EAAAC,cAACC,EAAA,EAAOK,SAAR,CAAiBC,UAAU,uBAC3BT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAKD,UAAU,uBACXT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACfT,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,SAAT,QACAZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,cAAT,4FCUDC,SApBE,SAAAC,GAAyC,IAAvCC,EAAuCD,EAAvCC,SAAUC,EAA6BF,EAA7BE,OAAQC,EAAqBH,EAArBG,SAAUC,EAAWJ,EAAXI,MAC3C,OACIlB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACfT,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CACImB,WAAY,CAACX,UAAU,iBAAkBY,YAAY,UACrDC,aAAc,SAACC,GAAD,OAAUA,GACxBC,MAAOR,EACPS,WAAY,SAACF,EAAMG,GAAP,OACZ1B,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CAACC,SAAU,WAAYC,WAAYH,EAAgB,YAAc,UACxEH,IAGTL,MAAOA,EACPH,SAAUA,EACVe,SAAUb,gBCMHc,UAnBA,SAAAjB,GAAyD,IAAvDkB,EAAuDlB,EAAvDkB,QAASC,EAA8CnB,EAA9CmB,KAAMC,EAAwCpB,EAAxCoB,KAAMC,EAAkCrB,EAAlCqB,KAAMC,EAA4BtB,EAA5BsB,IAAMC,EAAsBvB,EAAtBuB,aAAcC,EAAQxB,EAARwB,GAC5D,OACItC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,OAAO,UAAU/B,UAAU,OAAOgC,QAAU,iBAAc,QAARL,EAAgBC,EAAaC,EAAIH,GAAQ,OAC7FnC,EAAAC,EAAAC,cAACqC,EAAA,EAAKG,KAAN,KACA1C,EAAAC,EAAAC,cAACqC,EAAA,EAAKI,KAAN,KACSV,GAAMA,EAAKW,MAAM,EAAE,KAExB5C,EAAAC,EAAAC,cAACqC,EAAA,EAAKI,KAAN,KAAYR,GACZnC,EAAAC,EAAAC,cAACqC,EAAA,EAAKI,KAAN,KACe,MAATT,GCbD,GDcUF,ECdd,IAAM,GAAGa,QAAQ,GDcQ,IACpBb,EAAUE,OEGjBY,SAfE,SAAAhC,GAAqB,IAAnBiC,EAAmBjC,EAAnBiC,QAASZ,EAAUrB,EAAVqB,KAClBa,EAAOD,EAAQE,IAAI,SAACC,EAAIC,GAC1B,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,CACPC,IAAKF,EACLnB,QAASkB,EAAII,YAAYC,QAAQC,MACjCvB,KAAMiB,EAAIO,KACVvB,KAAOgB,EAAII,YAAYC,QAAQG,KAC/BvB,KAAMA,MAGV,OACInC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YAAauC,uCCcrBW,EArBG,SAAA7C,GAAuD,IAArD8C,EAAqD9C,EAArD8C,eAAgBb,EAAqCjC,EAArCiC,QAASN,EAA4B3B,EAA5B2B,QAAUoB,EAAkB/C,EAAlB+C,OAAQ1B,EAAUrB,EAAVqB,KAE3D,OACInC,EAAAC,EAAAC,cAAA,OAAKO,UAAW,aACZT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,gBACXT,EAAAC,EAAAC,cAACkD,EAAD,CACAjB,KAAMA,EACNH,QAAS4B,EAAe5B,QACxBC,KAAM2B,EAAe3B,KACrBC,KAAM0B,EAAe1B,OACrBlC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,qBACXT,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAiBnC,MAAO,CAACoC,MAAOF,GAASpD,UAAU,UAAUuD,KAAMC,MACnEjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAQzB,QAASA,GAAjB,sBAGRzC,EAAAC,EAAAC,cAAA,UAAK0D,EAAeO,aACpBnE,EAAAC,EAAAC,cAACkE,EAAD,CAAUrB,QAASA,EAASZ,KAAMA,EAAM1B,UAAU,+CCV/C4D,EAdJ,CACPC,0BAA2B,4BAC3BC,4BAA6B,8BAC7BC,6BAA8B,+BAC9BC,iBAAkB,mBAClBC,aAAc,eACdC,SAAU,WACVC,kBAAmB,oBACnBC,KAAM,sCACNC,QAAS,mCACTC,SAAU,mCACVC,SAAS,oCCRPA,EAAWC,8CAAYC,iBAEhBC,EAAyB,SAACnE,GAAD,MAAa,CAC/CoE,KAAMf,EAAGC,0BACTe,QAASrE,IAEEsE,EAA2B,SAACvC,GAAD,MAAc,CACpDqC,KAAMf,EAAGG,6BACTa,QAAStC,IAEEwC,EAA2B,SAACpB,EAAalC,EAAMD,EAASE,GAA7B,MAAuC,CAC7EkD,KAAMf,EAAGE,4BACTc,QAAS,CAAClB,cAAalC,OAAMD,UAASE,UAE3BsD,EAAU,SAACC,EAAKC,GAAN,MAAmB,CACxCN,KAAMf,EAAGM,SACTU,QAASI,EAAKC,YAKLC,EAAkB,SAACC,GAAD,OAAO,SAACC,GACnCC,IAAMC,IAAN,GAAAC,OAAa3B,EAAGQ,KAAhB,4CAAAmB,OAA+DhB,EAA/D,OAAAgB,OAA6EJ,IAC5EK,KAAK,SAACC,GACH,GAAGA,EAAIC,KAAKC,OAAO,EAAE,CACrB,IAAMpF,EAASkF,EAAIC,KAAKlD,IAAI,SAACoD,GACzB,MAAO,CAACC,cAAeD,EAAEC,cAAcC,IAAKF,EAAEE,OAGlDV,EAASV,EAAuBnE,OAEnCwF,MAAM,WACHX,EAASL,EAAQ,oBAAoB,QAIhCiB,EAAoB,SAACnE,GAAD,OAAQ,SAACuD,GACtCC,IAAMC,IAAN,GAAAC,OAAa3B,EAAGQ,KAAhB,4BAAAmB,OAA+C1D,EAA/C,YAAA0D,OAA4DhB,IAC3DiB,KAAK,SAACC,GACHL,EAASP,EAAyBY,EAAIC,KAAKO,mBAC5CF,MAAM,WACLX,EAASL,EAAQ,uBAAuB,QAGnCmB,EAAoB,SAACrE,GAAD,OAAQ,SAACuD,GACtCC,IAAMC,IAAN,GAAAC,OAAa3B,EAAGQ,KAAhB,yBAAAmB,OAA4C1D,EAA5C,YAAA0D,OAAyDhB,IACxDiB,KAAK,SAACC,GACHL,EAASN,EACLW,EAAIC,KAAK,GAAGS,YACZV,EAAIC,KAAK,GAAGU,yBACZX,EAAIC,KAAK,GAAG7C,YAAYwD,OAAOtD,MAC/B0C,EAAIC,KAAK,GAAG7C,YAAYwD,OAAOpD,SAEpC8C,MAAM,WACLX,EAASL,EAAQ,uBAAuB,QCvDnCuB,EAAiB,SAACnD,EAAgBP,EAAK2D,GAAtB,MAAoC,CAC9D5B,KAAMf,EAAGI,iBACTY,QAAS,CAACzB,iBAAgBP,MAAK2D,cAEtBC,EAAa,SAACjE,GAAD,MAAW,CACjCoC,KAAMf,EAAGK,aACTW,QAASrC,IAEAkE,EAAkB,SAAC5E,EAAI0E,EAAUG,GAAf,MAA8B,CACzD/B,KAAMf,EAAGO,kBACTS,QAAS,CAAC/C,KAAI0E,WAAUG,wBCiBbC,EAzBC,SAAAtG,GAAsC,IAApC2E,EAAoC3E,EAApC2E,IAAK4B,EAA+BvG,EAA/BuG,YAAaC,EAAkBxG,EAAlBwG,aAChC,OACItH,EAAAC,EAAAC,cAAA,OAAKqH,YAAU,SACfC,cAAY,OACZ7F,MAAO,CACLC,SAAU,WACV6F,UAAW,UAETzH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAO/F,MAAO,CACdC,SAAU,WACV+F,KAAM,IACNC,MAAO,GACJC,QAAS,WACRP,GAAa,IACdQ,KAAMT,EAAaU,MAAO,IAAMC,UAAQ,GAC3ChI,EAAAC,EAAAC,cAACwH,EAAA,EAAMO,OAAP,KACAjI,EAAAC,EAAAC,cAAA,OAAKgI,IAAI,2BAA2BzH,UAAU,eAAe0H,IAAI,KACjEnI,EAAAC,EAAAC,cAAA,UAAQO,UAAU,WAAlB,kBAEAT,EAAAC,EAAAC,cAACwH,EAAA,EAAMhF,KAAP,KAAa+C,MCbnB2C,cACF,SAAAA,EAAarI,GAAO,IAAAsI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAChBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMzI,KAuBV6I,iBAAmB,SAAChD,GAChByC,EAAKQ,SAAS,CAAC1G,KAAKyD,EAAEkD,OAAO5H,QAC7BmH,EAAKtI,MAAMgJ,QAAQpD,gBAAgBC,EAAEkD,OAAO5H,QA1B5BmH,EA6BpBW,eAAiB,SAAC7G,GAAS,IACf8G,EAAYZ,EAAKtI,MAAjBkJ,QAIF5F,EAHSgF,EAAKtI,MAAMiB,OAAOkI,OAAO,SAACC,GACrC,OAAQA,EAAK7C,gBAAkBnE,IAEhB,GAAGoE,IAItB,GAHA8B,EAAKQ,SAAS,CAAC1G,OAAMjB,MAAMmC,EAAK2D,SAAS7E,IACzCkG,EAAKtI,MAAMgJ,QAAQtC,kBAAkBpD,GACrCgF,EAAKtI,MAAMgJ,QAAQpC,kBAAkBtD,GAClC4F,EAAQ7C,OAAO,EAAE,CAEhB,IADA,IAAIC,EAAE,EACG+C,EAAQ,EAAGA,EAAQH,EAAQ7C,OAAQgD,IAErCH,EAAQG,GAAO/F,MAAMA,GACxBgD,IACG4C,EAAQG,GAAO/F,MAAMA,GACxBgF,EAAKQ,SAAS,CAAC1B,UAAU,QAE1Bd,IAAI4C,EAAQ7C,QAAOiC,EAAKQ,SAAS,CAAC1B,UAAU,YA/CnCkB,EAkDpBgB,mBAAqB,WAAM,IAAAC,EACKjB,EAAKkB,MAAzBrI,EADeoI,EACfpI,MAAO8F,EADQsC,EACRtC,SADQwC,EAE0BnB,EAAKtI,MAA9CkJ,EAFeO,EAEfP,QAASrF,EAFM4F,EAEN5F,eAAgB6F,EAFVD,EAEUC,YAEjC,GAAoB,IAAjBR,EAAQ7C,OACPiC,EAAKtI,MAAMgJ,QAAQhC,eAAenD,EAAgB1C,EAAO8F,GACzDqB,EAAKQ,SAAS,CAAC1B,UAAU,aAExB,GAAG8B,EAAQ7C,OAAO,EAAE,CAErB,IADA,IAAIC,EAAE,EACG+C,EAAQ,EAAGA,EAAQH,EAAQ7C,OAAQgD,IAKxC,GAJGH,EAAQG,GAAO/F,MAAMoG,EAAYnH,IAChC+D,IAGD4C,EAAQG,GAAO/F,MAAMnC,EAAM,CAC1BmH,EAAKQ,SAAS,CAAC1B,UAAU,UACzB,IAAMuC,EAAUT,EAAQC,OAAO,SAACC,GAC5B,OAAOA,EAAK9F,MAAQnC,IAExBmH,EAAKtI,MAAMgJ,QAAQ9B,WAAWyC,GAC9BrB,EAAKtI,MAAMgJ,QAAQ7B,gBAAgBhG,EAAO8F,EAAU,SAGzDX,IAAI4C,EAAQ7C,SACXiC,EAAKtI,MAAMgJ,QAAQhC,eAAenD,EAAe1C,EAAM8F,GACvDqB,EAAKQ,SAAS,CAAC1B,UAAU,WA5EjBkB,EAiFpBsB,iBAAmB,WACftB,EAAKtI,MAAMgJ,QAAQvD,QAAQ,IAAG,IAhF9B6C,EAAKkB,MAAQ,CACTrI,MAAM,GACNiB,KAAK,GACL6E,SAAS,GACTG,UAAU,IANEkB,mFASD,IAAAuB,EACkBpB,KAAKzI,MAA9BkJ,EADOW,EACPX,QAASQ,EADFG,EACEH,YAIjB,GAHAjB,KAAKK,SAAS,CAAC3H,MAAMuI,EAAYnH,GAAI0E,SAASyC,EAAYzC,SAAUG,UAAWsC,EAAYtC,YAC3FqB,KAAKzI,MAAMgJ,QAAQtC,kBAAkBgD,EAAYnH,IACjDkG,KAAKzI,MAAMgJ,QAAQpC,kBAAkB8C,EAAYnH,IAC9C2G,EAAQ7C,OAAO,EACd,IAAK,IAAIgD,EAAQ,EAAGA,EAAQH,EAAQ7C,OAAQgD,IACrCH,EAAQG,GAAO/F,MAAMoG,EAAYnH,IAChCkG,KAAKK,SAAS,CAAC1B,UAAU,yCAqErC,IAAMnE,EAAOwF,KAAKzI,MAAMiB,OAAOiC,IAAI,SAACkG,GAChC,OAAOA,EAAK7C,gBAFXuD,EAI+BrB,KAAKe,MAAlCvC,EAJF6C,EAIE7C,SAAU7E,EAJZ0H,EAIY1H,KAAMgF,EAJlB0C,EAIkB1C,UAJlB2C,EAKsDtB,KAAKzI,MAAzD6D,EALFkG,EAKElG,eAAgBmG,EALlBD,EAKkBC,eAAgB1C,EALlCyC,EAKkCzC,YAAa5B,EAL/CqE,EAK+CrE,IACpD,OACIzF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8J,EAAD,CACAjJ,SAAWyH,KAAKI,iBAChB5H,OAASgC,EACT9B,MAAOiB,EACPlB,SAAUuH,KAAKQ,eACfiB,YAAazB,KAAKyB,cAClBjK,EAAAC,EAAAC,cAACgK,EAAD,CACAtG,eAAgBA,EAChBb,QAASgH,EACTtH,QAAS+F,KAAKa,mBACdxF,OAAQsD,EACRhF,KAAM6E,IAELK,GAAarH,EAAAC,EAAAC,cAACiK,EAAD,CACd9C,YAAaA,EACb5B,IAAKA,EAAK6B,aAAckB,KAAKmB,2BA7GtBS,aAmHnBhC,EAAKiC,aAAe,CAChBrJ,OAAQ,GACR4C,eAAgB,GAChBmG,eAAe,IA0BJO,kBAlBS,SAACf,GACrB,MAAO,CACHvI,OAAQuI,EAAMgB,eAAevJ,OAC7B+I,eAAgBR,EAAMgB,eAAe7D,eACrC9C,eAAgB2F,EAAMgB,eAAe3G,eACrC6F,YAAaF,EAAMgB,eAAed,YAClCR,QAASM,EAAMiB,iBAAiBC,UAChCpD,YAAakC,EAAMmB,qBAAqBrD,YACxC5B,IAAK8D,EAAMmB,qBAAqBjF,MAIxC,SAA4BI,GACxB,MAAO,CACLkD,QAAS4B,YAAmBrC,OAAAsC,EAAA,EAAAtC,CAAA,GAAKuC,EAAmBC,GAAajF,KAIxDyE,CAA8ClC,GCtI9C2C,EAhBK,SAAAjK,GAA6B,IAA3BiC,EAA2BjC,EAA3BiC,QAASV,EAAkBvB,EAAlBuB,aACrBW,EAAOD,EAAQE,IAAI,SAACC,EAAIC,GAC1B,OAAOnD,EAAAC,EAAAC,cAACkD,EAADkF,OAAA0C,OAAA,CACP3H,IAAKF,GACDD,EAAIU,eAFD,CAGPzB,KAAMe,EAAI8D,SACV5E,IAAI,MACJE,GAAIY,EAAIG,IACRhB,aAAc,SAACC,EAAIH,GAAUE,EAAaC,EAAIH,SAGlD,OACInC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YAAcuC,ICR/BiI,qNAEF5I,aAAe,SAACC,EAAIH,GAChBkG,EAAKtI,MAAMgJ,QAAQ7B,gBAAgB5E,EAAIH,EAAM,OAC7CkG,EAAKtI,MAAMmL,QAAQC,KAAK,kFAGnB,IAAAC,EAAA5C,KACGS,EAAYT,KAAKzI,MAAjBkJ,QACR,OACIjJ,EAAAC,EAAAC,cAAA,WACmB,IAAjB+I,EAAQ7C,OACRpG,EAAAC,EAAAC,cAAA,OAAKO,UAAU,eAAf,gBACAT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmL,EAAD,CAAatI,QAASkG,EAAS5G,aAAc,SAACC,EAAIH,GAAUiJ,EAAK/I,aAAaC,EAAIH,eAd1EiI,cAgCTE,kBAXf,SAAAxJ,GACI,MAAO,CACHmI,QAFqCnI,EAAnB0J,iBAEQC,YAGlC,SAA4B5E,GACxB,MAAO,CACLkD,QAAS4B,YAAmBrC,OAAAsC,EAAA,EAAAtC,CAAA,GAAKwC,GAAajF,KAIrCyE,CAEbW,GCzBaK,EAZF,SAACvL,GACV,OACIC,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAACqL,EAAA,EAAD,KACIvL,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWtD,IACrCpI,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWT,cCKpCU,OATf,WACE,OACE3L,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAC0L,EAAD,MACA5L,EAAAC,EAAAC,cAAC2L,EAAD,iBCWSC,GAnBgB,SAAAC,GAAW,OAAI,SAC5CC,EACAC,EACAC,GAaA,OAAOH,EAXkB,SAACxC,EAAO4C,GAC/B,IARUC,EAQJC,EAAQC,YAAYC,MACpBC,EAAWR,EAAQzC,EAAO4C,GAC1BM,EAAMH,YAAYC,MAClBG,GAXIN,EAWSK,EAAMJ,EAXLM,KAAKC,MAAe,IAATR,GAAgB,KAe/C,OAFAS,QAAQC,IAAI,wBAAyBJ,GAE9BF,GAG4BP,EAAcC,KCTpCa,GATF,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAd,GAC5BU,QAAQK,MAAMf,EAAO/G,MACrByH,QAAQM,KAAK,cAAehB,GAC5B,IAAIiB,EAASH,EAAKd,GAGlB,OAFAU,QAAQC,IAAI,aAAcE,EAAMK,YAChCR,QAAQS,WACDF,KCJEnB,GAAe,CACxBjL,OAAQ,CAAC,CAACsF,cAAe,GAAGC,IAAK,KACjCG,eAAe,CAAE,CAACpD,YAAa,CAAEC,QAAS,CAAEC,MAAO,GAAIE,KAAM,KAAOD,KAAK,KACzEG,eAAe,CAACO,YAAY,GAAGlC,KAAK,GAAGD,QAAQ,GAAGE,KAAK,IACvDuH,YAAY,CAACnH,GAAG,SAAS0E,SAAS,WAAWG,UAAU,UA2B1CoD,GAxBQ,WAAkC,IAAjChB,EAAiCgE,UAAAnH,OAAA,QAAAoH,IAAAD,UAAA,GAAAA,UAAA,GAAzBtB,GAAcE,EAAWoB,UAAAnH,OAAA,EAAAmH,UAAA,QAAAC,EACrD,OAAOrB,EAAO/G,MACZ,KAAKf,EAAGC,0BACJ,OAAOgE,OAAAsC,EAAA,EAAAtC,CAAA,GACAiB,EADP,CACcvI,OAAQmL,EAAO9G,UAEjC,KAAKhB,EAAGG,6BACJ,OAAO8D,OAAAsC,EAAA,EAAAtC,CAAA,GACAiB,EADP,CACc7C,eAAgByF,EAAO9G,UAEzC,KAAKhB,EAAGE,4BACJ,OAAO+D,OAAAsC,EAAA,EAAAtC,CAAA,GACAiB,EADP,CACc3F,eAAgBuI,EAAO9G,UAErC,KAAKhB,EAAGO,kBACR,OAAO0D,OAAAsC,EAAA,EAAAtC,CAAA,GACAiB,EADP,CACcE,YAAa0C,EAAO9G,UAGtC,QACA,OAAOkE,aC3BF0C,GAAe,CACxBxB,UAAU,IAkBCD,GAfU,WAAkC,IAAjCjB,EAAiCgE,UAAAnH,OAAA,QAAAoH,IAAAD,UAAA,GAAAA,UAAA,GAAzBtB,GAAcE,EAAWoB,UAAAnH,OAAA,EAAAmH,UAAA,QAAAC,EACvD,OAAOrB,EAAO/G,MACV,KAAKf,EAAGI,iBACJ,OAAO6D,OAAAsC,EAAA,EAAAtC,CAAA,GACAiB,EADP,CACckB,UAAS,GAAAzE,OAAAsC,OAAAmF,GAAA,EAAAnF,CAAMiB,EAAMkB,WAAZ,CAAuB0B,EAAO9G,YAEzD,KAAKhB,EAAGK,aACJ,OAAO4D,OAAAsC,EAAA,EAAAtC,CAAA,GACAiB,EADP,CACckB,UAAW0B,EAAO9G,UAEhC,QACA,OAAOkE,ICfN0C,GAAe,CACxBxG,IAAI,GAAI4B,aAAa,GAcVqD,GAXc,WAAkC,IAAjCnB,EAAiCgE,UAAAnH,OAAA,QAAAoH,IAAAD,UAAA,GAAAA,UAAA,GAAzBtB,GAAcE,EAAWoB,UAAAnH,OAAA,EAAAmH,UAAA,QAAAC,EAC3D,OAAOrB,EAAO/G,MACV,KAAKf,EAAGM,SACJ,OAAO2D,OAAAsC,EAAA,EAAAtC,CAAA,GACAiB,EADP,CACc9D,IAAK0G,EAAO9G,QAASgC,YAAa8E,EAAOzG,UAEvD,QACA,OAAO6D,ICAJmE,GANKC,YAAgB,CAChCpD,kBACAC,oBACAE,0BCFJ,IAAMsC,GCDS,SAAwBY,GACrC,IAAMC,EAAc,CAACC,GAAkBC,MAGjCC,EAAY,CAFSC,IAAeC,WAAf,EAAmBL,GAEPM,IACjCC,EAAoBC,IAAOH,WAAP,EAAWF,GAIrC,OAFcjC,YAAY2B,GAAaE,EAAgBQ,GDN5CE,GAEbC,IAASC,OACLxO,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAUzB,MAAOA,IACfhN,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACwO,GAAD,QAGFC,SAASC,eAAe","file":"static/js/main.4829a6aa.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport '../style/myNavbar.sass';\n\n const MyNavbar = (props) => {\n    return (\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">Herolo Weather Task</Navbar.Brand>\n            <Navbar.Collapse className=\"justify-content-end\">\n            <Nav className=\"justify-content-end\">\n                <div className='navItems'>\n                <Link to=\"/Home\">Home</Link>\n                <Link to=\"/Favorites\">Favorites</Link>\n                </div>\n            </Nav>\n            </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )};\n    export default MyNavbar;","import React from 'react';\nimport Autocomplete from 'react-autocomplete';\nimport '../style/mySearch.sass';\n\nconst MySearch = ({onChange, cities, OnSelect, value}) => {\n    return (\n        <div className='mySearch'>\n        <Autocomplete\n            inputProps={{className:'mySearchAutoCo', placeholder:'search'}}\n            getItemValue={(item) => item}\n            items={cities}\n            renderItem={(item, isHighlighted) =>\n            <div style={{position: 'relative', background: isHighlighted ? 'lightgray' : 'white' }}>\n                {item}\n            </div>\n        }\n        value={value}\n        onChange={onChange}\n        onSelect={OnSelect}\n        />\n        </div>\n    )};\n\n\nexport default MySearch;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport '../style/myCard.sass';\nimport {farToCel} from '../utils/utils';\n\nconst MyCard = ({degrees, date, unit ,name, loc , handleGoHome, id}) => {\n    return (\n        <Card border=\"primary\" className='card' onClick= {() => loc === 'fav' ? handleGoHome(id, name) : null} >\n            <Card.Body>\n            <Card.Text>\n                    {date&&date.slice(0,10)}\n                </Card.Text>\n                <Card.Text>{name}</Card.Text>\n                <Card.Text>\n                    {(unit === 'F')\n                    ? farToCel(degrees) + 'C'\n                    : degrees + unit\n                    }\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )};\n\n\nexport default MyCard;","export const farToCel = (deg) => {\n    return ((deg-32)*5/9).toFixed(1)\n}\n\n","import React from 'react';\nimport MyCard from './MyCard';\nimport '../style/cardList.sass';\n\nconst CardList = ({weather, name}) => {\n    const list = weather.map((val,i) => {\n        return <MyCard \n        key={i}\n        degrees={val.Temperature.Maximum.Value} \n        date={val.Date} \n        unit ={val.Temperature.Maximum.Unit}\n        name={name}\n        /> \n    })\n    return (\n        <div className='cardlist' >{list}</div>\n    )};\n\n\nexport default CardList;","import React from 'react';\nimport CardList from './CardList';\nimport MyCard from './MyCard';\nimport '../style/myWeather.sass';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from 'react-bootstrap';\n\nconst MyWeather = ({currentWeather, weather, onClick , iColor, name}) => {\n\n    return (\n        <div className= 'myWeather'>\n            <div className='myWeatherTop'>\n                <MyCard\n                name={name}\n                degrees={currentWeather.degrees}\n                date={currentWeather.date}\n                unit={currentWeather.unit}/>\n                <div className='myWeatherTopRight'>\n                    <FontAwesomeIcon style={{color: iColor}} className='favIcon' icon={faHeart} />\n                    <Button onClick={onClick}>Add To Favorites</Button>\n                </div>\n            </div>\n            <h1>{currentWeather.weatherText}</h1>\n            <CardList weather={weather} name={name} className='myWeatherBottom'/>\n        </div>\n    )};\n\n\nexport default MyWeather\n\n","const AT = {\n    GET_AUTO_COMPLETE_SUCCESS: 'GET_AUTO_COMPLETE_SUCCESS',\n    GET_CURRENT_WEATHER_SUCCESS: 'GET_CURRENT_WEATHER_SUCCESS',\n    GET_FIVE_DAY_WEATHER_SUCCESS: 'GET_FIVE_DAY_WEATHER_SUCCESS',\n    ADD_TO_FAVORITES: 'ADD_TO_FAVORITES',\n    REM_FROM_FAV: 'REM_FROM_FAV',\n    FAIL_MSG: 'FAIL_MSG',\n    EDIT_CURRENT_CITY: 'EDIT_CURRENT_CITY',\n    LINK: 'http://dataservice.accuweather.com/',\n    API_KEY: 'Neijlcq5HWIG9whwUgzP2AvRyRQ0fnz3',\n    API_KEY1: 'qAWasab5si6MYD64DQvLIDF9fhP3qVKb',\n    API_KEY2:'fAGGXfz6C130ttIiFZLGBZXBqzjFZwlA'\n}\n\nexport default AT;","import axios from 'axios';\nimport AT from '../constants/actionTypes';\n\nconst API_KEY2 = process.env.WEATHER_API_KEY2;\n\nexport const getAutoCompleteSuccess = (cities) => ({\n    type: AT.GET_AUTO_COMPLETE_SUCCESS,\n    payload: cities\n  });\n  export const getFiveDayWeatherSuccess = (weather) => ({\n    type: AT.GET_FIVE_DAY_WEATHER_SUCCESS,\n    payload: weather\n  });\n  export const getCurrentWeatherSuccess = (weatherText, date, degrees, unit) => ({\n    type: AT.GET_CURRENT_WEATHER_SUCCESS,\n    payload: {weatherText, date, degrees, unit}\n  });\n  export const failMsg = (msg, msgBool) => ({\n    type: AT.FAIL_MSG,\n    payload: msg ,msgBool\n  });\n\n  \n\nexport const getAutoComplete = (e) => (dispatch) => {\n    axios.get(`${AT.LINK}locations/v1/cities/autocomplete?apikey=${API_KEY2}&q=${e}`)\n    .then((res) => {\n        if(res.data.length>0){\n        const cities = res.data.map((c) => {\n            return {LocalizedName: c.LocalizedName,Key: c.Key}\n            \n        })\n        dispatch(getAutoCompleteSuccess(cities));}\n    })\n    .catch(() => {\n        dispatch(failMsg('autoCompleteFail', true))\n    });\n};\n\nexport const getFiveDayWeather = (id) => (dispatch) => {\n    axios.get(`${AT.LINK}forecasts/v1/daily/5day/${id}?apikey=${API_KEY2}`)\n    .then((res) => {\n        dispatch(getFiveDayWeatherSuccess(res.data.DailyForecasts));\n    }).catch(() => {\n        dispatch(failMsg('FiveDayWeather Fail', true))\n    });\n};\nexport const getCurrentWeather = (id) => (dispatch) => {\n    axios.get(`${AT.LINK}currentconditions/v1/${id}?apikey=${API_KEY2}`)\n    .then((res) => {\n        dispatch(getCurrentWeatherSuccess(\n            res.data[0].WeatherText,\n            res.data[0].LocalObservationDateTime,\n            res.data[0].Temperature.Metric.Value,\n            res.data[0].Temperature.Metric.Unit\n         ))\n    }).catch(() => {\n        dispatch(failMsg('CurrentWeather Fail', true))\n    });\n};","import AT from '../constants/actionTypes';\n\nexport const addToFavorites = (currentWeather, key, cityName) => ({\n    type: AT.ADD_TO_FAVORITES,\n    payload: {currentWeather, key, cityName}\n  });\nexport const remFromFav = (list) => ({\n    type: AT.REM_FROM_FAV,\n    payload: list\n});\nexport const editCurrentCity = (id, cityName, iconColor) => ({\n    type: AT.EDIT_CURRENT_CITY,\n    payload: {id, cityName, iconColor}\n});","import React from 'react';\nimport { Toast } from 'react-bootstrap';\n\n\nconst Toaster = ({msg, showFailMsg, onToastClose}) => {\n    return (\n        <div aria-live=\"polite\"\n        aria-atomic=\"true\"\n        style={{\n          position: 'relative',\n          minHeight: '100px',\n        }}>\n            <Toast style={{\n            position: 'absolute',\n            top: -400,\n            right: 0,\n            }} onClose={() => {\n                onToastClose(false)\n            }} show={showFailMsg} delay={2000} autohide> \n            <Toast.Header>\n            <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n            <strong className=\"mr-auto\">Error Message</strong>\n            </Toast.Header>\n            <Toast.Body>{msg}</Toast.Body>\n            </Toast>\n        </div>\n    )};\n\n\nexport default Toaster;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MySearch from '../components/MySearch';\nimport MyWeather from '../components/MyWeather';\nimport { bindActionCreators, compose } from 'redux';\nimport { connect } from 'react-redux';\nimport * as weatherActions from '../actions/weatherActions';\nimport * as favActions from '../actions/favActions';\nimport Toaster from '../components/Toaster';\n\nclass Home extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            value:'',\n            name:'',\n            cityName:'',\n            iconColor:''\n        }\n    }\n    componentDidMount(){\n        const { favList, currentCity } = this.props;\n        this.setState({value:currentCity.id, cityName:currentCity.cityName, iconColor: currentCity.iconColor})\n        this.props.actions.getFiveDayWeather(currentCity.id);\n        this.props.actions.getCurrentWeather(currentCity.id);\n        if(favList.length>0){\n            for (let index = 0; index < favList.length; index++) {\n                if(favList[index].key===currentCity.id){\n                    this.setState({iconColor:'red'})\n                }\n                \n            }\n        }\n    }\n\n    handleFormChange = (e) => {\n        this.setState({name:e.target.value})\n        this.props.actions.getAutoComplete(e.target.value);\n        \n    }\n    handleOnSelect = (name) => {\n        const { favList } = this.props;\n        const newKey = this.props.cities.filter((city) => {\n            return (city.LocalizedName === name)\n        }) \n        const key = newKey[0].Key;\n        this.setState({name, value:key, cityName:name })\n        this.props.actions.getFiveDayWeather(key);\n        this.props.actions.getCurrentWeather(key);\n        if(favList.length>0){\n            let c=0;\n            for (let index = 0; index < favList.length; index++) {\n                \n                if(favList[index].key!==key)\n                c++;\n                if(favList[index].key===key)\n                this.setState({iconColor:'red'})\n            }\n            if(c===favList.length)this.setState({iconColor:'black'})\n        }\n    }\n    handleOnClickToFav = () => {\n        const { value, cityName } = this.state;\n        const { favList, currentWeather, currentCity } = this.props;\n\n        if(favList.length===0){\n            this.props.actions.addToFavorites(currentWeather, value, cityName);\n            this.setState({iconColor:'red'})\n        }\n        else if(favList.length>0){\n            let c=0;\n            for (let index = 0; index < favList.length; index++) {\n                if(favList[index].key!==currentCity.id){\n                    c++\n                }\n                \n                if(favList[index].key===value){\n                    this.setState({iconColor:'black'})\n                    const newList = favList.filter((city) => {\n                        return city.key !== value\n                    })\n                    this.props.actions.remFromFav(newList)\n                    this.props.actions.editCurrentCity(value, cityName, 'black')\n                }\n            }\n            if(c===favList.length){\n                this.props.actions.addToFavorites(currentWeather,value,cityName);\n                this.setState({iconColor:'red'})\n            }\n        }\n  \n    }\n    handleToastClose = () => {\n        this.props.actions.failMsg('',false)\n    }\n\n    render() {\n        const list = this.props.cities.map((city)=>{\n            return city.LocalizedName\n        })\n        const {cityName, name, iconColor} = this.state;\n        const {currentWeather, FiveDayWeather, showFailMsg, msg} = this.props;\n        return (\n            <div>\n            <MySearch \n            onChange={ this.handleFormChange }\n            cities= {list} \n            value={name}\n            OnSelect={this.handleOnSelect}\n            loadOptions={this.loadOptions}/>\n            <MyWeather \n            currentWeather={currentWeather} \n            weather={FiveDayWeather}\n            onClick={this.handleOnClickToFav}\n            iColor={iconColor}\n            name={cityName}\n            />\n            {showFailMsg&&<Toaster \n            showFailMsg={showFailMsg} \n            msg={msg} onToastClose={this.handleToastClose}/>}\n            </div>\n        );\n    }\n}\n\nHome.defaultProps = {\n    cities: [],\n    currentWeather: {},\n    FiveDayWeather:[]\n}\nHome.propTypes = {\n    cities: PropTypes.array,\n    FiveDayWeather: PropTypes.array,\n    currentWeather: PropTypes.object    \n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cities: state.weatherReducer.cities,\n        FiveDayWeather: state.weatherReducer.DailyForecasts,\n        currentWeather: state.weatherReducer.currentWeather,\n        currentCity: state.weatherReducer.currentCity,\n        favList: state.favoritesReducer.favorites,\n        showFailMsg: state.notificationsReducer.showFailMsg,\n        msg: state.notificationsReducer.msg\n    };\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n      actions: bindActionCreators({ ...weatherActions, ...favActions}, dispatch)\n    };\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Home);","import React from 'react';\nimport MyCard from './MyCard';\nimport '../style/cardList.sass';\n\nconst FavCardList = ({weather, handleGoHome}) => {\n    const list = weather.map((val,i) => {\n        return <MyCard \n        key={i}\n        {...val.currentWeather}\n        name={val.cityName}\n        loc='fav'\n        id={val.key}\n        handleGoHome={(id, name) => {handleGoHome(id, name)}}\n        /> \n    })\n    return (\n        <div className='cardlist'  >{list}</div>\n    )};\n\n\nexport default FavCardList;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as favActions from '../actions/favActions';\nimport FavCardList from '../components/FavCardList';\nimport '../style/favorites.sass';\n\n\nclass Favorites extends Component {\n\n    handleGoHome = (id, name ) => {\n        this.props.actions.editCurrentCity(id, name, 'red');\n        this.props.history.push(\"/Home\");\n    }\n\n    render() {\n        const { favList } = this.props;\n        return (\n            <div>\n            {(favList.length===0)\n             ?<div className='noFavorites'>No Favorites</div>\n             :<div>\n                <FavCardList weather={favList} handleGoHome={(id, name) => {this.handleGoHome(id, name)}}/>\n             </div>}\n             </div>\n        );\n    }\n}\n\nfunction mapStateToProps({favoritesReducer}) {\n    return {\n        favList: favoritesReducer.favorites\n    };\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n      actions: bindActionCreators({ ...favActions}, dispatch)\n    };\n  }\n\nexport default connect(\n    mapStateToProps,mapDispatchToProps\n)(Favorites);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../containers/Home';\nimport Favorites from '../containers/Favorites';\n\nconst Main = (props) => {\n    return (\n        <div>\n           <Switch>\n               <Route exact path='/Home' component={Home}/>\n               <Route path='/Favorites' component={Favorites}/>\n            </Switch> \n        </div>\n        \n    )};\n\n\nexport default Main","import React from 'react';\nimport MyNavbar from './components/MyNavbar';\nimport Main from './components/Main';\nimport './App.css';\n\n \nfunction App() {\n  return (\n    <div className=\"App\">\n      <MyNavbar/>\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now()\n    const newState = reducer(state, action)\n    const end = performance.now()\n    const diff = round(end - start)\n\n    console.log('reducer process time:', diff)\n\n    return newState\n  }\n\n  return createStore(monitoredReducer, initialState, enhancer)\n}\n\nexport default monitorReducerEnhancer","const logger = store => next => action => {\n    console.group(action.type)\n    console.info('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n  }\n  \n  export default logger","import AT from '../constants/actionTypes';\n\nexport const initialState = {\n    cities: [{LocalizedName: '',Key: ''}],\n    DailyForecasts:[ {Temperature: { Maximum: { Value: '', Unit: '' } },Date:'' } ],\n    currentWeather:{weatherText:'',date:'',degrees:'',unit:''},\n    currentCity:{id:'215854',cityName:'Tel Aviv',iconColor:'black'}\n  };\n\n  const weatherReducer = (state = initialState, action) => {\n      switch(action.type) {\n        case AT.GET_AUTO_COMPLETE_SUCCESS: \n            return {\n                ...state, cities: action.payload\n            }\n        case AT.GET_FIVE_DAY_WEATHER_SUCCESS:\n            return {\n                ...state, DailyForecasts: action.payload\n            }\n        case AT.GET_CURRENT_WEATHER_SUCCESS:\n            return {\n                ...state, currentWeather: action.payload\n            }\n            case AT.EDIT_CURRENT_CITY:\n            return {\n                ...state, currentCity: action.payload\n            }\n        \n        default:\n        return state;\n      }\n  };\n\n  export default weatherReducer;","import AT from '../constants/actionTypes';\n\nexport const initialState = {\n    favorites:[]\n};\n\nconst favoritesReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case AT.ADD_TO_FAVORITES:\n            return {\n                ...state, favorites: [...state.favorites ,action.payload]\n            }\n        case AT.REM_FROM_FAV:\n            return {\n                ...state, favorites: action.payload\n            }\n            default:\n            return state;\n    }\n}\n\nexport default favoritesReducer;\n","import AT from '../constants/actionTypes';\n\nexport const initialState = {\n    msg:'', showFailMsg: false\n};\n\nconst notificationsReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case AT.FAIL_MSG:\n            return {\n                ...state, msg: action.payload, showFailMsg: action.msgBool\n            }\n            default:\n            return state;\n    }\n}\n\nexport default notificationsReducer;\n","import { combineReducers } from 'redux';\nimport weatherReducer from './weather';\nimport favoritesReducer from './favorites';\nimport notificationsReducer from './notifications';\n\n\n\nconst rootReducer = combineReducers({\n    weatherReducer,\n    favoritesReducer,\n    notificationsReducer\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport configureStore from './utils/configureStore';\n\nconst store =configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter> \n    </Provider>\n    , document.getElementById('root'));","import { applyMiddleware, compose, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nimport monitorReducersEnhancer from '../enhancers/monitorReducers'\nimport loggerMiddleware from '../middleware/logger'\nimport rootReducer from '../reducers/index'\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [loggerMiddleware, thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n  const composedEnhancers = compose(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store\n}"],"sourceRoot":""}